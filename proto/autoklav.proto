syntax = "proto3";

package autoklav;

service Autoklav {
    // Status
    rpc getStatus(Empty) returns (Status);

    // Global variables
    rpc getVariables(Empty) returns (Variables);
    rpc setVariable(SetVariable) returns (Status);

    // Process
    rpc getAllProcesses(Empty) returns (ProcessInfoList);
    rpc getDistinctProcessValues(ProcessFilterRequest) returns (FilteredProcessList);
    rpc getFilteredModeValues(ProcessModeFilterRequest) returns (FilteredModeProcessList);
    rpc getProcessLogs(ProcessLogRequest) returns (ProcessLogList);
    rpc startProcess(StartProcessRequest) returns (Status);
    rpc stopProcess(Empty) returns (Status);

    // Sensor
    rpc getSensorValues(Empty) returns (SensorValues);
    rpc getSensorPinValues(Empty) returns (SensorValues);
    rpc getSensorRelayValues(Empty) returns (SensorRelayValues);
    rpc updateSensor(UpdateSensorRequest) returns (Status);

    // StateMachine
    rpc getStateMachineValues(Empty) returns (StateMachineValues);
}

message Empty {}

message Status {
    int32 code = 1;
    int32 errors = 2;
    string errorsString = 3;
}

message Variables {
    int32 serialDataTime = 1;
    int32 stateMachineTick = 2;
    double sterilizationTemp = 3;
    double pasterizationTemp = 4;
}

message SetVariable {
    string name = 1;
    string value = 2;
}

message ProcessFilterRequest {
    string columnName = 1;    
}

message ProcessModeFilterRequest {
    string productName = 1;
    string productQuantity = 2;
}

message UpdateSensorRequest {
    string name = 1;
    double minValue = 2;
    double maxValue = 3; 
}

message SensorValues {
    double temp = 1;
    double tempK = 2;
    double pressure = 3;
}

message SensorRelayValues {
    uint32 waterFill = 1;
    uint32 heating = 2;
    uint32 bypass = 3;
    uint32 pump = 4;
    uint32 inPressure = 5;
    uint32 cooling = 6;
}

message StateMachineValues {
    uint32 id = 1;
    double elapsedTime = 2;
    double temp = 3;
    double tempK = 4;
    double dTemp = 5;
    double pressure = 6;
    uint32 state = 7;
    double Dr = 8;
    double Fr = 9;
    double r = 10;
    double sumFr = 11;
    double sumR = 12;
    string timestamp = 13;
}

enum ProcessConfigType {
    STERILIZATION = 0;
    PASTERIZATION = 1;
    CUSTOM = 2;
}

enum ProcessConfigState {
    READY = 0;
    STARTING = 1;
    FILLING = 2;
    HEATING = 3;
    COOLING = 4;
    FINISHING = 5;
    FINISHED = 6;
}

enum ProcessConfigMode {
    TARGETF = 0;
    TIME = 1;
}

message ProcessConfig {
    ProcessConfigType type = 1;
    double customTemp = 2;
    ProcessConfigMode mode = 3;    
    uint32 targetTime = 4;
    double maintainTemp = 5;
    double maintainPressure = 6;
    double finishTemp = 7;
}

message ProcessInfo {
    uint32 id = 1;
    string productName = 2;
    string productQuantity = 3;
    string bacteria = 4;
    string description = 5;
    string processStart = 6;
    string targetF = 7;
    string processLength = 8;
}

message StartProcessRequest {
    ProcessConfig processConfig = 1;
    ProcessInfo processInfo = 2;
}

message ProcessLogRequest{
    repeated uint32 ids = 1;
}

message FilteredProcessList {
    repeated string values = 1;
}

message FilteredModeProcessList {
    repeated string targetFValues = 1;
    repeated string processLengthValues = 2;
}

// New message to hold a list of ProcessInfo
message ProcessInfoList {
    repeated ProcessInfo processes = 1;
}

message ProcessLogList {
    repeated StateMachineValues processLogs = 1; 
}